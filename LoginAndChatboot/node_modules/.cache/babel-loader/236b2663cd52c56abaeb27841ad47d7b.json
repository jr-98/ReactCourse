{"ast":null,"code":"var _jsxFileName = \"/home/jonathanrtj98/Documents/practicas/React/LoginAndChatboot/src/components/WelcomeScreen/WelcomeScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Net from 'vanta/dist/vanta.net.min';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WelcomeScreen = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const useRefDiv = useRef(null);\n  const [vanta, setVanta] = useState(0);\n  useEffect(() => {\n    if (!vanta) {\n      //inicislizaci칩n del componente\n      setVanta(Net({\n        THREE,\n        el: useRefDiv.current,\n        mouseControls: true,\n        touchControls: true,\n        gyroControls: false,\n        minHeight: 200.00,\n        minWidth: 200.00,\n        scale: 1.00,\n        scaleMobile: 1.00,\n        color: 0x12596b,\n        backgroundColor: 0x0,\n        points: 18.00,\n        maxDistance: 35.00,\n        spacing: 20.00\n      }));\n    }\n\n    return () => {\n      //vamos a ejecutar lo necesario para detener los efectos\n      if (vanta) {\n        vanta.destroy();\n        console.log(\"componente destruido\");\n      }\n    }; //Al salir de la pantalla se debe detener el evento\n    //para ello de debe desasoviar todos lso elementos asociados a ese componente\n  }, [vanta]); //Con esto me aseguro de que \n  //si tuviera m치s variables\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fullScreen\",\n    ref: useRefDiv,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WelcomeScreen, \"vduFisdYqH4VPjVLR4EWuutMPSo=\");\n\n_c = WelcomeScreen;\nWelcomeScreen.propTypes = {\n  children: PropTypes.node\n};\nexport default WelcomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"WelcomeScreen\");","map":{"version":3,"sources":["/home/jonathanrtj98/Documents/practicas/React/LoginAndChatboot/src/components/WelcomeScreen/WelcomeScreen.jsx"],"names":["React","useRef","useEffect","useState","PropTypes","Net","THREE","WelcomeScreen","children","useRefDiv","vanta","setVanta","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","scale","scaleMobile","color","backgroundColor","points","maxDistance","spacing","destroy","console","log","propTypes","node"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,MAAMC,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpC,QAAMC,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACQ,KAAL,EAAY;AACR;AACAC,MAAAA,QAAQ,CAACN,GAAG,CAAC;AACTC,QAAAA,KADS;AAETM,QAAAA,EAAE,EAAEH,SAAS,CAACI,OAFL;AAGPC,QAAAA,aAAa,EAAE,IAHR;AAIvBC,QAAAA,aAAa,EAAE,IAJQ;AAKvBC,QAAAA,YAAY,EAAE,KALS;AAMvBC,QAAAA,SAAS,EAAE,MANY;AAOvBC,QAAAA,QAAQ,EAAE,MAPa;AAQvBC,QAAAA,KAAK,EAAE,IARgB;AASvBC,QAAAA,WAAW,EAAE,IATU;AAUvBC,QAAAA,KAAK,EAAE,QAVgB;AAWvBC,QAAAA,eAAe,EAAE,GAXM;AAYvBC,QAAAA,MAAM,EAAE,KAZe;AAavBC,QAAAA,WAAW,EAAE,KAbU;AAcvBC,QAAAA,OAAO,EAAE;AAdc,OAAD,CAAJ,CAAR;AAgBH;;AACD,WAAO,MAAM;AACT;AACA,UAAIf,KAAJ,EAAW;AACPA,QAAAA,KAAK,CAACgB,OAAN;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,KAND,CApBY,CA2BZ;AACA;AACH,GA7BQ,EA6BN,CAAClB,KAAD,CA7BM,CAAT,CAHoC,CAgCzB;AACX;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAED,SAAjC;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvCD;;GAAMD,a;;KAAAA,a;AAyCNA,aAAa,CAACsB,SAAd,GAA0B;AACtBrB,EAAAA,QAAQ,EAAEJ,SAAS,CAAC0B;AADE,CAA1B;AAIA,eAAevB,aAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Net from 'vanta/dist/vanta.net.min'\nimport * as THREE from 'three'\n\nconst WelcomeScreen = ({ children }) => {\n    const useRefDiv = useRef(null)\n    const [vanta, setVanta] = useState(0)\n    useEffect(() => {\n        if (!vanta) {\n            //inicislizaci칩n del componente\n            setVanta(Net({\n                THREE,\n                el: useRefDiv.current,\n                  mouseControls: true,\n  touchControls: true,\n  gyroControls: false,\n  minHeight: 200.00,\n  minWidth: 200.00,\n  scale: 1.00,\n  scaleMobile: 1.00,\n  color: 0x12596b,\n  backgroundColor: 0x0,\n  points: 18.00,\n  maxDistance: 35.00,\n  spacing: 20.00\n            }))\n        }\n        return () => {\n            //vamos a ejecutar lo necesario para detener los efectos\n            if (vanta) {\n                vanta.destroy()\n                console.log(\"componente destruido\")\n            }\n        }\n        //Al salir de la pantalla se debe detener el evento\n        //para ello de debe desasoviar todos lso elementos asociados a ese componente\n    }, [vanta])//Con esto me aseguro de que \n    //si tuviera m치s variables\n    return (\n        <div className=\"fullScreen\" ref={useRefDiv}>\n            {children}\n        </div>\n    )\n}\n\nWelcomeScreen.propTypes = {\n    children: PropTypes.node\n}\n\nexport default WelcomeScreen\n"]},"metadata":{},"sourceType":"module"}