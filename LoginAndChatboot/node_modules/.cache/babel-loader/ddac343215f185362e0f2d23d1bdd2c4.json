{"ast":null,"code":"var _jsxFileName = \"/home/jonathanrtj98/Documents/practicas/React/LoginAndChatboot/src/components/Chatboot/Chatboot.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ChatBot from 'react-simple-chatbot';\nimport { ThemeProvider } from 'styled-components';\nimport Post from './Post';\nimport Link from './Link';\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = {\n  background: '#f5f8fb',\n  fontFamily: 'Helvetica Neue',\n  headerBgColor: '#0f4d4a',\n  headerFontColor: '#fff',\n  headerFontSize: '15px',\n  botBubbleColor: '#0f4d4a',\n  botFontColor: '#fff',\n  userBubbleColor: '#fff',\n  userFontColor: '#4a4a4a'\n}; // all available config props\n\nconst config = {\n  width: '300px',\n  height: '400px',\n  hideUserAvatar: true,\n  placeholder: 'Type your response.',\n  headerTitle: 'ChatBot'\n};\n\nconst Chatbot = props => {\n  _s();\n\n  let [showChat, setShowChat] = useState(false);\n\n  const startChat = () => {\n    setShowChat(true);\n  };\n\n  const hideChat = () => {\n    setShowChat(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: showChat ? 'none' : ''\n      },\n      children: /*#__PURE__*/_jsxDEV(ChatBot, {\n        speechSynthesis: {\n          enable: true,\n          lang: 'en-US'\n        },\n        recognitionEnable: true,\n        steps: [{\n          id: 'welcome',\n          message: 'Hello!',\n          trigger: 'q-firstname'\n        },\n        /* Paste */\n        {\n          id: 'q-firstname',\n          message: 'What is your  name?',\n          trigger: 'firstname'\n        }, {\n          id: 'firstname',\n          user: true,\n          validator: value => {\n            if (/^[A-Za-z]+$/.test(value)) {\n              return true;\n            } else {\n              return 'Please input alphabet characters only.';\n            }\n          },\n          trigger: 'rmcbot'\n        }, {\n          id: 'rmcbot',\n          message: 'Hi,{previousValue} I am RMC Bot! What can I do for you?',\n          trigger: 'qtype'\n        }, {\n          id: 'qtype',\n          options: [{\n            value: 1,\n            label: 'Property Tax ?',\n            trigger: '4'\n          }, {\n            value: 2,\n            label: ' Professional Tax ?',\n            trigger: '3'\n          }, {\n            value: 3,\n            label: 'Election Department',\n            trigger: '5'\n          }, {\n            value: 4,\n            label: 'More Information',\n            trigger: '6'\n          }]\n        }, {\n          id: '3',\n          message: 'Profession tax is the tax levied and collected by the state governments in United State.',\n          trigger: 'qtype'\n        }, {\n          id: '4',\n          message: 'A property tax or millage rate is an ad valorem tax on the value of a property.',\n          trigger: 'qtype'\n        }, {\n          id: '5',\n          message: 'An election is a way people can choose their candidate or their preferences in a representative democracy or other form of government',\n          trigger: 'qtype'\n        }, {\n          id: '6',\n          component: /*#__PURE__*/_jsxDEV(Link, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 26\n          }, this),\n          trigger: 'q-submit'\n        }, {\n          id: 'q-submit',\n          message: 'Do you have any other questions !?',\n          trigger: 'submit'\n        }, {\n          id: 'submit',\n          options: [{\n            value: 'y',\n            label: 'Yes',\n            trigger: 'no-submit'\n          }, {\n            value: 'n',\n            label: 'No',\n            trigger: 'end-message'\n          }]\n        }, {\n          id: 'no-submit',\n          options: [{\n            value: 1,\n            label: 'Property Tax ?',\n            trigger: '4'\n          }, {\n            value: 2,\n            label: ' Professional Tax ?',\n            trigger: '3'\n          }, {\n            value: 3,\n            label: 'Election Department',\n            trigger: '5'\n          }, {\n            value: 4,\n            label: 'More Information',\n            trigger: '6'\n          }]\n        }, {\n          id: 'end-message',\n          component: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 26\n          }, this),\n          asMessage: true,\n          end: true\n        }],\n        ...config\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !showChat ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => startChat(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-minus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => hideChat(),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chatbot, \"qpcmUuAyD2DiuaTqZ3tcN8AbPik=\");\n\n_c = Chatbot;\nexport default Chatbot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"sources":["/home/jonathanrtj98/Documents/practicas/React/LoginAndChatboot/src/components/Chatboot/Chatboot.jsx"],"names":["React","useState","ChatBot","ThemeProvider","Post","Link","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","config","width","height","hideUserAvatar","placeholder","headerTitle","Chatbot","props","showChat","setShowChat","startChat","hideChat","display","enable","lang","id","message","trigger","user","validator","value","test","options","label","component","asMessage","end"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ChatBot from 'react-simple-chatbot'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport Post from './Post'\r\nimport Link from './Link'\r\nimport '../../App.css'\r\nconst theme = {\r\n  background: '#f5f8fb',\r\n  fontFamily: 'Helvetica Neue',\r\n  headerBgColor: '#0f4d4a',\r\n  headerFontColor: '#fff',\r\n  headerFontSize: '15px',\r\n  botBubbleColor: '#0f4d4a',\r\n  botFontColor: '#fff',\r\n  userBubbleColor: '#fff',\r\n  userFontColor: '#4a4a4a',\r\n}\r\n\r\n// all available config props\r\nconst config = {\r\n  width: '300px',\r\n  height: '400px',\r\n  hideUserAvatar: true,\r\n  placeholder: 'Type your response.',\r\n  headerTitle: 'ChatBot',\r\n}\r\n\r\nconst Chatbot = (props) => {\r\n  let [showChat, setShowChat] = useState(false)\r\n\r\n  const startChat = () => {\r\n    setShowChat(true)\r\n  }\r\n  const hideChat = () => {\r\n    setShowChat(false)\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div style={{ display: showChat ? 'none' : '' }}>\r\n        <ChatBot\r\n          speechSynthesis={{ enable: true, lang: 'en-US' }}\r\n          recognitionEnable={true}\r\n          steps={[\r\n            {\r\n              id: 'welcome',\r\n              message: 'Hello!',\r\n              trigger: 'q-firstname',\r\n            },\r\n            /* Paste */\r\n            {\r\n              id: 'q-firstname',\r\n              message: 'What is your  name?',\r\n              trigger: 'firstname',\r\n            },\r\n            {\r\n              id: 'firstname',\r\n              user: true,\r\n              validator: (value) => {\r\n                if (/^[A-Za-z]+$/.test(value)) {\r\n                  return true\r\n                } else {\r\n                  return 'Please input alphabet characters only.'\r\n                }\r\n              },\r\n              trigger: 'rmcbot',\r\n            },\r\n            {\r\n              id: 'rmcbot',\r\n              message:\r\n                'Hi,{previousValue} I am RMC Bot! What can I do for you?',\r\n              trigger: 'qtype',\r\n            },\r\n            {\r\n              id: 'qtype',\r\n              options: [\r\n                { value: 1, label: 'Property Tax ?', trigger: '4' },\r\n                { value: 2, label: ' Professional Tax ?', trigger: '3' },\r\n                { value: 3, label: 'Election Department', trigger: '5' },\r\n                { value: 4, label: 'More Information', trigger: '6' },\r\n              ],\r\n            },\r\n            {\r\n              id: '3',\r\n              message:\r\n                'Profession tax is the tax levied and collected by the state governments in United State.',\r\n              trigger: 'qtype',\r\n            },\r\n            {\r\n              id: '4',\r\n              message:\r\n                'A property tax or millage rate is an ad valorem tax on the value of a property.',\r\n              trigger: 'qtype',\r\n            },\r\n            {\r\n              id: '5',\r\n              message:\r\n                'An election is a way people can choose their candidate or their preferences in a representative democracy or other form of government',\r\n              trigger: 'qtype',\r\n            },\r\n            {\r\n              id: '6',\r\n              component: <Link />,\r\n              trigger: 'q-submit',\r\n            },\r\n            {\r\n              id: 'q-submit',\r\n              message: 'Do you have any other questions !?',\r\n              trigger: 'submit',\r\n            },\r\n            {\r\n              id: 'submit',\r\n              options: [\r\n                { value: 'y', label: 'Yes', trigger: 'no-submit' },\r\n                { value: 'n', label: 'No', trigger: 'end-message' },\r\n              ],\r\n            },\r\n            {\r\n              id: 'no-submit',\r\n              options: [\r\n                { value: 1, label: 'Property Tax ?', trigger: '4' },\r\n                { value: 2, label: ' Professional Tax ?', trigger: '3' },\r\n                { value: 3, label: 'Election Department', trigger: '5' },\r\n                { value: 4, label: 'More Information', trigger: '6' },\r\n              ],\r\n            },\r\n            {\r\n              id: 'end-message',\r\n              component: <Post />,\r\n              asMessage: true,\r\n              end: true,\r\n            },\r\n          ]}\r\n          {...config}\r\n        />\r\n      </div>\r\n      <div>\r\n        {!showChat ? (\r\n          <button className=\"btn\" onClick={() => startChat()}>\r\n            <i className=\"fa fa-minus\"></i>\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn\" onClick={() => hideChat()}>\r\n            <i className=\"fa fa-plus\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default Chatbot\r\n"]},"metadata":{},"sourceType":"module"}